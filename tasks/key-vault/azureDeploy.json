{
  "$schema": "http://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
  "contentVersion": "1.0.0.0",
  "parameters": {
    "keyVaultName": {
      "type": "string"
    },
    "objectId": {
      "type": "string"
    },
    "owner": {
      "type": "string"
    },
    "deploymentId": {
      "type": "string"
    },
    "workspaceId": {
      "type": "string"
    },
    "tier": {
      "type": "string"
    },
    "subnetId": {
      "type": "string"
    },
    "enableSoftDelete": {
      "type": "bool"
    }
  },
  "variables": {
    "subnetIdProperty": [
      {
        "id": "[if(equals(parameters('subnetId'),'NULL'), json('null'), parameters('subnetId'))]"
      }
    ]
  },
  "resources": [
    {
      "name": "[parameters('keyVaultName')]",
      "type": "Microsoft.KeyVault/vaults",
      "apiVersion": "2018-02-14",
      "location": "[resourceGroup().location]",
      "tags": {
        "OWNER": "[parameters('owner')]",
        "DEPLOYMENT_ID": "[parameters('deploymentId')]",
        "ROLE_PURPOSE": "Azure KeyVault"
      },
      "scale": null,
      "properties": {
        "tenantId": "[subscription().tenantId]",
        "sku": {
          "family": "A",
          "name": "[parameters('tier')]"
        },
        "accessPolicies": [{
            "tenantId": "[subscription().tenantId]",
            "objectId": "[parameters('objectId')]",
            "permissions": {
              "keys": ["all"],
              "secrets": ["all"],
              "certificates": ["all"],
              "storage": ["all"]
            }
          
        }],
        "enableSoftDelete": "[if(equals(parameters('enableSoftDelete'),bool('false')), json('null'), bool('true'))]",
        "enablePurgeProtection": "[if(equals(parameters('enableSoftDelete'),bool('false')), json('null'), bool('true'))]",
        "enabledForDeployment": true,
        "enabledForDiskEncryption": true,
        "enabledForTemplateDeployment": true,
        "networkAcls": {
          "defaultAction": "[if(equals(parameters('subnetId'),'NULL'), 'Allow', 'Deny')]",
          "virtualNetworkRules": "[if(equals(parameters('subnetId'),'NULL'), json('null'), variables('subnetIdProperty'))]"
        }
      }
    },
    {
      "type":"Microsoft.KeyVault/vaults/providers/diagnosticsettings",
      "name":"[concat(parameters('keyVaultName'), '/Microsoft.Insights/service')]",
      "apiVersion":"2016-09-01",
      "location":"[resourceGroup().location]",
      "dependsOn":[  
        "[concat('Microsoft.KeyVault/vaults/', parameters('keyVaultName'))]"
      ],
      "properties":{
        "workspaceId":"[parameters('workspaceId')]",
        "logs":[
          {
            "category":"AuditEvent",
            "enabled":true,
            "retentionPolicy":{
              "enabled":true
            }
          }
        ]
      }
    }
  ],
  "outputs": {}
}