    - name: "Get date"
      command: "date +%s"
      register: TimeStamp
      
    - name: Grab tags
      shell: az group show -g "{{ var_resourceGroupName }}" --query tags
      register: rg_tags

    - name: Save Tags
      set_fact:
        var_rgTags: "{{ rg_tags.stdout }}"
      when: rg_tags.stdout | length > 5

    - name: Create Key Vault
      azure_rm_deployment:
        deployment_name: "{{ var_env_keyVaultName }}-Key-Vault-{{ TimeStamp.stdout }}"
        location: "{{ var_location }}"
        client_id: "{{ AZURE_RM_CLIENTID }}"
        secret: "{{ AZURE_RM_SECRET }}"
        tenant: "{{ AZURE_RM_TENANTID }}"
        subscription_id: "{{ var_azure_rm_subid }}"
        parameters:
          keyVaultname:
            value: "{{ var_env_keyVaultName }}"
          objectId:
            value: "{{ var_ObjectsId }}"
          owner:
            value: "{{ var_owner }}"
          deploymentId:
            value: "{{ var_deploymentId }}"
          workspaceId:
            value: "{{ workspaceId }}"
          tier:
            value: "{{ var_tier }}"
          subnetId:
            value: "{{ var_subnetId }}"
          enableSoftDelete:
            value: "{{ var_enableSoftDelete }}"
        resource_group_name: "{{ var_resourceGroupName }}"
        tags: "{{ var_rgTags | default(omit) }}"
        template: "{{ lookup('file', '../azureDeploy.json') }}"
      retries: 3
      delay: 10
      register: result
      until: result is succeeded

    - name: Get Resource ID
      shell: az resource list -g {{ var_resourceGroupName }} --name {{ var_env_keyVaultName }} --query [0].id
      register: resourceId

    - name: Print Resource ID
      debug:
        msg: "resource_id:key-vault:{{ resourceId.stdout }}"